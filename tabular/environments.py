import numpy as np

P = np.array([[[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
               [1, 0, 0, 0, 0, 0, 0],    # s_1
               [0, 1, 0, 0, 0, 0, 0],    # s_2
               [0, 0, 1, 0, 0, 0, 0],    # s_3             # action a_0 = left
               [0, 0, 0, 1, 0, 0, 0],    # s_4
               [0, 0, 0, 0, 1, 0, 0],    # s_5
               [0, 0, 0, 0, 0, 0, 1]],   # s_6 terminal
              
              [[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
               [0, 0, 1, 0, 0, 0, 0],    # s_1
               [0, 0, 0, 1, 0, 0, 0],    # s_2
               [0, 0, 0, 0, 1, 0, 0],    # s_3             # action a_1 = right
               [0, 0, 0, 0, 0, 1, 0],    # s_4
               [0, 0, 0, 0, 0, 0, 1],    # s_5
               [0, 0, 0, 0, 0, 0, 1]]])  # s_6 terminal
#  States:      0  1  2  3  4  5  6

r = np.array([[0, 0],  # s_0
              [0, 0],  # s_1
              [0, 0],  # s_2
              [0, 0],  # s_3
              [0, 0],  # s_4
              [0, 1],  # s_5
              [0, 0]]) # s_6
# action:      0  1

r_dense = np.array([[0, 0],    # s_0
                    [-10, 1],  # s_1
                    [-10, 1],  # s_2
                    [-10, 1],  # s_3
                    [-10, 1],  # s_4
                    [-10, 1],  # s_5
                    [0, 0]])   # s_6
# action:             0  1

pi = np.array([[0.5, 0.5],  # s_0
               [0.5, 0.5],  # s_1
               [0.5, 0.5],  # s_2
               [0.5, 0.5],  # s_3
               [0.5, 0.5],  # s_4
               [0.5, 0.5],  # s_5
               [0.5, 0.5]]) # s_6

tabular_features = np.array([[0, 0, 0, 0, 0],
                             [1, 0, 0, 0, 0],
                             [0, 1, 0, 0, 0],
                             [0, 0, 1, 0, 0],
                             [0, 0, 0, 1, 0],
                             [0, 0, 0, 0, 1],
                             [0, 0, 0, 0, 0]])

inverted_features = np.array([[0, 0, 0, 0, 0],
                              [0, 1, 1, 1, 1],
                              [1, 0, 1, 1, 1],
                              [1, 1, 0, 1, 1],
                              [1, 1, 1, 0, 1],
                              [1, 1, 1, 1, 0],
                              [0, 0, 0, 0, 0]]) / 2

inv_sqrt2 = 1 / np.sqrt(2)
inv_sqrt3 = 1 / np.sqrt(3)
dependent_features = np.array([[0, 0, 0],
                               [1, 0, 0],
                               [inv_sqrt2, inv_sqrt2, 0],
                               [inv_sqrt3, inv_sqrt3, inv_sqrt3],
                               [0, inv_sqrt2, inv_sqrt2],
                               [0, 0, 1],
                               [0, 0, 0]])

single_features = np.array([0, 1, 1, 1, 1, 1, 0]).reshape(-1, 1)

P_mess = np.array([[[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
                    [1, 0, 0, 0, 0, 0, 0],    # s_1
                    [0, 1, 0, 0, 0, 0, 0],    # s_2
                    [0, 0, 1, 0, 0, 0, 0],    # s_3        # action a_0 = left
                    [0, 0, 0, 1, 0, 0, 0],    # s_4
                    [0, 0, 0, 0, 1, 0, 0],    # s_5
                    [0, 0, 0, 0, 0, 0, 1]],   # s_6 terminal

                   [[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
                    [1, 0, 0, 0, 0, 0, 0],    # s_1
                    [0, 1, 0, 0, 0, 0, 0],    # s_2
                    [0, 0, 1, 0, 0, 0, 0],    # s_3        # action a_1 = left
                    [0, 0, 0, 1, 0, 0, 0],    # s_4
                    [0, 0, 0, 0, 1, 0, 0],    # s_5
                    [0, 0, 0, 0, 0, 0, 1]],   # s_6 terminal

                   [[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
                    [1, 0, 0, 0, 0, 0, 0],    # s_1
                    [0, 1, 0, 0, 0, 0, 0],    # s_2
                    [0, 0, 1, 0, 0, 0, 0],    # s_3        # action a_2 = lef
                    [0, 0, 0, 1, 0, 0, 0],    # s_4
                    [0, 0, 0, 0, 1, 0, 0],    # s_5
                    [0, 0, 0, 0, 0, 0, 1]],   # s_6 terminal
                   
                   [[1, 0, 0, 0, 0, 0, 0],    # s_0 terminal
                    [0, 0, 1, 0, 0, 0, 0],    # s_1
                    [0, 0, 0, 1, 0, 0, 0],    # s_2
                    [0, 0, 0, 0, 1, 0, 0],    # s_3        # action a_3 = right
                    [0, 0, 0, 0, 0, 1, 0],    # s_4
                    [0, 0, 0, 0, 0, 0, 1],    # s_5
                    [0, 0, 0, 0, 0, 0, 1]]])  # s_6 terminal
#  States:           0  1  2  3  4  5  6

r_mess = np.array([[0, 0, 0, 0],  # s_0
                   [0, 0, 0, 0],  # s_1
                   [0, 0, 0, 0],  # s_2
                   [0, 0, 0, 0],  # s_3
                   [0, 0, 0, 0],  # s_4
                   [0, 0, 0, 1],  # s_5
                   [0, 0, 0, 0]]) # s_6
# action:           0  1  2  3
